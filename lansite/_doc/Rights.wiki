#summary Система управления правами в LanSite.

= Введение =

Расписание подсистемы прав LanSite.

= Подробности =

== Общие принципы ==
Существуют 3 уровня прав:
  # на классы
  # на объект
  # по-умолчанию
И существуют 2 типа субъектов прав:
  # группы
  # юзеры
И 2 типа объектов прав:
  # модели (классы)
  # объекты моделей

Общая схема:
  * хранилище прав на модели и объекты - отдельно от самих объектов.
  * кто когда и что сделал с объектом (в т.ч. - создал) - можно узнать из Истории
  * при создании/записи объекта сразу же формируются некие права для генератора объекта (юзера)
  * Дальше юзер может определить особые права на конкретный объект - или же работают дефолтные правила.
  * для каждого действия с объектом определяется матрица действий (см. Порядок определения прав)

== Структура ==

Права на модели определяются самой подсистемой django.

Права на объекты - самопальная структура.

Права на объект бывают такие:
  # чтение
  # изменение
  # удаление
  # изменение прав

(по-моему, я изобретаю лисапед...)

Значения прав:
  # не определено
  # нельзя
  # можно

Предварительная схема модели прав на объекты:

  * Object.id
  * usertype:bool (False==group, True==user)
  * userid:IDREF - ID группы/юзера (None == default)
  * ?permitmask:? - пачка прав - чтение|изменение|удаление|права
  * permitvalue:bitmask? - пачка значений прав - undefined|yes|no

Варианты:

  * Можно скрестить 2 крайних поля в 1. Тогда будет 1 поле 16 bit bitmask
  * Или же - permitmask определяет defined/undefined, а маска прав определяет - можно/неможно. Тогда permitmask - 4 bit, permitvalues - 4 bit

== Порядок определения прав ==

  # Сначала определяются права на модель:
    # если есть право создавать - тут уж...
    # если право на действие не разрешено - остается undefined
  # Затем - по-объектно
    # определяются самые мягкие права из всех групп, в которые входит user
  # затем - права user'а - которые перекрывают уже вычисленные права
  # Всё, что осталось неопределенным - доопределяется default'ом по всей системе
  # Если system default не определен - "запрещено всё, что не разрешено".

== Порядок разрешения конфликтов ==

  * права на объекты назначаются независимо: право delete не подразумевает право write, etc.
  * права на объекты превалируют над правами на модели
  * второй вариант - права идут по нарастающей (read > write > delete > chmod).
  * user с правами "менять права" на объект - имеет право менять права кому-то - не круче, чем сам имеет
  * user с птицей "superuser" имеет все права